/**
 * This stylesheet is for styles you want to include only when displaying demo
 * styles for grids, animations, color swatches, etc.
 * These styles will not be your production CSS.
 */
:root {
  --pl-border-color: #dddddd;
  --pl-border-radius: 8px;
  --pl-grid-gap: 1rem;
  --pl-color-fpo: #69b3e7;
  --pl-color-fpo-light: #edf6fc;
}

#sg-patterns {
  -webkit-box-sizing: border-box !important;
  box-sizing: border-box !important;
  max-width: 100%;
  padding: 0 0.5em;
}

.demo-animate {
  background: #ddd;
  padding: 1em;
  margin-bottom: 1em;
  text-align: center;
  border-radius: var(--pl-border-radius);
  cursor: pointer;
}

.sg-colors {
  list-style: none !important;
  padding: 0 !important;
  margin: 0 !important;
  display: -ms-grid;
  display: grid;
  grid-gap: var(--pl-grid-gap);
  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
}

.sg-colors li {
  -webkit-box-flex: 1;
  -ms-flex: auto;
  flex: auto;
  padding: 0.3em;
  margin: 0 0.5em 0.5em 0;
  min-width: 5em;
  max-width: 14em;
  border: 1px solid var(--pl-border-color);
  border-radius: 8px;
}

.sg-swatch {
  display: block;
  height: 4em;
  margin-bottom: 0.3em;
  border-radius: 5px;
}

.sg-label {
  font-size: 90%;
  line-height: 1;
}

.sg-table {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border-collapse: collapse;
  border-color: #e1e3ea;
  border-spacing: 0;
  border-style: solid;
  border-width: 1px;
  table-layout: auto;
  width: 100%;
  margin-top: 2rem;
  margin-bottom: 2rem;
}
.sg-table thead {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background-color: #f4f4f6;
  border-bottom-color: #e1e3ea;
  border-bottom-style: solid;
  border-bottom-width: 2px;
}
.sg-table tr {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border-style: solid;
  border-color: #e1e3ea;
  border-width: 0;
  border-bottom-width: 1px;
  vertical-align: middle;
}
.sg-table th {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
  padding-bottom: 0.75rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  position: relative;
  text-align: left;
  vertical-align: inherit;
  word-wrap: break-word;
}
.sg-table th.sg-table-heading-value, .sg-table th.sg-table-heading-example {
  width: 250px;
}
.sg-table td {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding-bottom: 0.75rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  position: relative;
  text-align: left;
  vertical-align: inherit;
  word-wrap: break-word;
}

.sg-token-transparent {
  display: inline-block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: linear-gradient(45deg, rgba(43, 40, 38, 0.1) 25%, transparent 0), linear-gradient(-45deg, rgba(43, 40, 38, 0.1) 25%, transparent 0), linear-gradient(45deg, transparent 75%, rgba(43, 40, 38, 0.1) 0), linear-gradient(-45deg, transparent 75%, rgba(43, 40, 38, 0.1) 0);
  background-size: 12px 12px;
  background-position: 0 0, 0 6px, 6px -6px, -6px 0;
}
.sg-token-transparent > div {
  width: 100%;
  height: 100%;
}
.sg-token-radius {
  background-color: #080707;
  display: inline-block;
  width: 2rem;
  height: 2rem;
  vertical-align: middle;
}

/**
 * Icon grid
 * 1) Generated by Gul-SVG-Sprites
 */
.icon-grid {
  display: -ms-grid;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  gap: 2rem;
}

.icon-grid__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  border: 1px solid var(--pl-border-color);
  border-radius: var(--pl-border-radius);
  padding: 8px;
  height: 5.5rem;
}

.icon-grid .c-icon {
  margin-bottom: 0.25rem;
}

.icon-grid__label {
  font-size: 10px;
}

.icon {
  width: 1rem;
  height: 1rem;
}

.icon-boxes h2 {
  font-size: 1rem;
}

/**
* For placeholder only block
* 1) Used for placeholder blocks for layouts
*/
.fpo {
  background: var(--pl-color-fpo-light);
  border: 1px dashed var(--pl-color-fpo);
  border-radius: 5px;
  padding: 1rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
  font-weight: bold;
  text-align: center;
  color: var(--pl-color-fpo);
}

.sg-pattern-example small {
  display: none;
}

/**
 * Add height and overflow to two column fixed layout to show functionality only in style-guide example.
 */
.sg-pattern-example .l-page-layout--two-column-fixed {
  height: 10rem;
  overflow: auto;
}

/**
 * Add min-height of 0 to two column fixed to help with showing functionality only in style-guide example.
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary {
  min-height: 0;
}

/**
 * FPO block within two column fixed layout within secondary section
 * 1) Width expands entire container at small screens
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary .fpo-block {
  width: 100%;
  /* 1 */
}

/**
 * FPO block within two column fixed layout within secondary section larger screens
 * 1) Set height to 100% of viewport height
 * 2) Set width = width of vertical header
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary .fpo-block {
    width: 20rem;
    /* 1 */
    height: 100vh;
    /* 2 */
    margin-bottom: 0;
  }
}
/**
 * Two column fixed layout within pattern example
 * 1) Set height to height of placeholder content secondary section
 * 2) Set overflow to auto so the secondary section stays fixed while the main section scrolls
 */
.sg-pattern-example .l-page-layout--two-column-fixed {
  height: 18.3rem;
  overflow: auto;
}

/**
 * Secondary section within pattern example and two-column fixed at larger screens
 * 1) Position absolute to make this pattern similar to fixed vertical header
 * 2) Height inherits so it doesn't span longer than the pattern window on "All" PL page
 * 3) Float this left to get layout sections side by side within PL "View All" section
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary {
    position: absolute;
    /* 1 */
    height: inherit;
    /* 2 */
    float: left;
    /* 3 */
  }
}
/**
 *  Fpo block within pattern example, two column fixed, and secondary section
 * 1) Make fpo block width of the container on small screens
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary .fpo-block {
  width: 100%;
  /* 1 */
}

/**
 * FPO Block Within pattern example, two column fixed, and secondary layout larger screens
 * 1) Added width similar to style guide vertical header
 * 2) Height inherits so it doesn't span longer than the pattern window on "All" PL page
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary .fpo-block {
    width: 20rem;
    /* 1 */
    height: inherit;
    /* 2 */
  }
}
/**
 * Add height of main to get appearance of side bar staying fixed while main window scrolls.
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__main {
  height: 30rem;
}

/**
 * Add height of fpo block to equal height of main to help with scrolling main window/fixed sidebar effect.
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__main .fpo-block {
  height: 30rem;
  margin-bottom: 0;
}

/**
 * Vertical header in pattern example at large screens
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .c-header--vertical {
    max-width: 20rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
